theme_bw()
plots <- list(
age = age_bar,
ethnicity = ethnicity_bar,
general_health = health_bar,
religion = religion_bar,
household_composition =
list(
loners = loners_bar,
copules = couples_bar,
others  = others_bar
))
others_bar <-
stat_bar(others)
others_bar
others_bar <-
stat_bar(others, "Households") +
ggtitle("Other households", sub = "Neither couples, single occupants or single parents")
others_bar
others_bar <-
stat_bar(others, "Households") +
ggtitle("Other households", sub = "Neither couples, lone occupants or single parents")
others_bar
health_table <- nice_table(health_neat, "General health")
ethnicity_table
#| include: false
library(sf)
library(knitr)
shapes <- read_sf(here("geospatial-reporting-data",
"st-anselm-hayes_2023-05-17"))
shapes <- read_sf(here("geospatial-reporting-data",
"st-anselm-hayes_2023-05-17.geojson"))
shapes <- read_sf(here("geospatial-reporting-data",
"st-anselm-hayes_2023-05-17",
"st-anselm-hayes_requested-shapes.geojson"))
shapes
library(fs)
library(here)
library(vroom)
library(stringr)
library(purrr)
library(sf)
library(dplyr)
library(ggplot2)
library(magrittr)
library(lobstr)
library(tidyr)
library(scales)
library(forcats)
in_requested <- function(...) here("requested-areas", "2023-05-15_emma-sivyer", ...)
parish_shape <- read_sf(in_requested("st-anselm-parish-hayes.kml"))
estates_shape <- read_sf(in_requested("hayes-estates.kml"))
requested_shapes <-
rbind(parish_shape, estates_shape) |>
select(name = Name)
rm(parish_shape, estates_shape)
oa <-
read_sf(here("civic-areas", "2021_oa-boundaries_england-wales_generalised_clipped")) |>
select(oa_2021_code = OA21CD)
requested_shapes <- st_transform(requested_shapes, st_crs(oa))
stat_names <- c("age-five-year", "ethnicity", "general-health", "household-composition", "religion")
diocesan_stats <-
map(stat_names,
function(stat_name){
file_name <- str_c(params[["nation"]], "_", stat_name, ".csv")
file_path <- here("diocesan-stats", file_name)
vroom(file_path, show_col_types = FALSE) |>
filter(diocese == str_to_title(params[["diocese"]])) |>
select(-diocese)
})
names(diocesan_stats) <- str_replace_all(stat_names, "-", "_")
oa_stats <-
map(stat_names,
function(stat_name){
file_name <- str_c("england-wales_", stat_name, "_oa_2021.RDS")
file_path <- here("small-area-stats", file_name)
readRDS(file_path)
})
names(oa_stats) <- str_replace_all(stat_names, "-", "_")
## NB:
oa_stats$general_health |>
filter(if_any(where(is.numeric), is.na))
national_stats <-
map(oa_stats,
\(x){
filter(x, if_all(where(is.numeric), negate(is.na))) |>
summarise(across(where(is.numeric), sum))
})
request_union <- st_union(requested_shapes)
intersecting_oa <-
st_intersects(oa, request_union, sparse = FALSE) |>
as.vector()
oa <- filter(oa, intersecting_oa)
oa <- mutate(oa, oa_area = st_area(geometry))
nrow(oa)
intersections <-
st_intersection(requested_shapes, oa) |>
arrange(name)
intersections <- mutate(intersections,
intersection_area = st_area(geometry),
oa_in_area        = intersection_area / oa_area)
ggplot() +
geom_sf(data = oa, fill = "blue") +
geom_sf(data = intersections, fill = "red", alpha = 0.7, inherit.aes = FALSE) +
theme_minimal()
requested_shapes
grd <- dir_create(here("geospatial-reporting-data"))
hayes <- dir_create(grd, "st-anselm-hayes_2023-05-17")
write_sf(requested_shapes, here(hayes, "st-anselm-hayes_requested-shapes.geojson"))
rm(shapes)
#| label: area-map
#| fig-cap: "Areas described in this report"
#| include: false
shapes <- read_sf(here("geospatial-reporting-data",
"st-anselm-hayes_2023-05-17",
"st-anselm-hayes_requested-shapes.geojson"))
shapes
?write_sf
dbDataType()
st_write(requested_shapes, here(hayes, "st-anselm-hayes_requested-shapes.geojson"),
delete_dsn = TRUE)
st_write(oa, here(hayes, "st-anselm-hayes_oa.geojson"),
delete_dsn = TRUE)
shapes <- read_sf(here("geospatial-reporting-data",
"st-anselm-hayes_2023-05-17",
"st-anselm-hayes_requested-shapes.geojson"))
shapes
library(ggmap)
basemap <- ggmap(shapes)
library(basemaps_
library(basemaps)
library(basemaps)
library(basemap)
library(basemaps)
library(basemapR)
library(ggmap)
get_map(shapes)
?get_map
basemap <- get_map(st_bbox(shapes))
st_bbox(shapes)
library(magrittr)
basemap <- get_map(
st_bbox(shapes) |>
set_names(c("left", "bottom", "right", "top")))
shapes <- st_transform(shapes, "WSG84")
shapes <- st_transform(shapes, crs("WSG84"))
shapes <- st_transform(shapes, st_crs("WSG84"))
?st_transfrom
?st_transform
shapes <- st_transform(shapes, 3857)
basemap <- get_map(
st_bbox(shapes) |>
set_names(c("left", "bottom", "right", "top")))
st_bbox(shapes)
shapes <- st_transform(shapes, 4326)
st_bbox(shaeps)
st_bbox(shapes)
basemap <- get_map(
st_bbox(shapes) |>
set_names(c("left", "bottom", "right", "top")))
ggmap(basemap) +
geom_sf(shapes, inherit.aes = FALSE)
ggmap(basemap) +
geom_sf(shapes, aes(geometry = geometry), inherit.aes = FALSE)
ggmap(basemap) +
geom_sf(data = shapes, aes(geometry = geometry), inherit.aes = FALSE)
get_map
?get_map
basemap <- get_map(
st_bbox(shapes) |>
set_names(c("left", "bottom", "right", "top")),
zoom = 8)
ggmap(basemap) +
geom_sf(data = shapes, aes(geometry = geometry), inherit.aes = FALSE)
basemap <- get_map(
st_bbox(shapes) |>
set_names(c("left", "bottom", "right", "top")),
zoom = 9)
ggmap(basemap) +
geom_sf(data = shapes, aes(geometry = geometry), inherit.aes = FALSE)
basemap <- get_map(
st_bbox(shapes) |>
set_names(c("left", "bottom", "right", "top")),
zoom = 10)
ggmap(basemap) +
geom_sf(data = shapes, aes(geometry = geometry), inherit.aes = FALSE)
basemap <- get_map(
st_bbox(shapes) |>
set_names(c("left", "bottom", "right", "top")),
zoom = 11)
ggmap(basemap) +
geom_sf(data = shapes, aes(geometry = geometry), inherit.aes = FALSE)
basemap <- get_map(
st_bbox(shapes) |>
set_names(c("left", "bottom", "right", "top")),
zoom = 12)
ggmap(basemap) +
geom_sf(data = shapes, aes(geometry = geometry), inherit.aes = FALSE)
basemap <- get_map(
st_bbox(shapes) |>
set_names(c("left", "bottom", "right", "top")),
zoom = 13)
ggmap(basemap) +
geom_sf(data = shapes, aes(geometry = geometry), inherit.aes = FALSE)
basemap <- get_map(
st_bbox(shapes) |>
set_names(c("left", "bottom", "right", "top")),
zoom = 14)
ggmap(basemap) +
geom_sf(data = shapes, aes(geometry = geometry), inherit.aes = FALSE)
ggmap(basemap) +
geom_sf(data = shapes,
aes(geometry = geometry),
fill = NA,
inherit.aes = FALSE)
library(carutools)
ggmap(basemap) +
geom_sf(data = shapes,
aes(geometry = geometry, colour = name),
fill = NA,
inherit.aes = FALSE) +
ca_scale_colour_discrete()
ggmap(basemap) +
geom_sf(data = shapes,
aes(geometry = geometry, colour = name),
fill = NA, size = 2, alpha = 0.6,
inherit.aes = FALSE) +
ca_scale_colour_discrete()
ggmap(basemap) +
geom_sf(data = shapes,
aes(geometry = geometry, colour = name),
fill = NA, size = 4, alpha = 0.6,
inherit.aes = FALSE) +
ca_scale_colour_discrete()
?geom_sf
ggmap(basemap) +
geom_sf(data = shapes,
aes(geometry = geometry, colour = name),
fill = NA, size = 1, alpha = 0.6,
inherit.aes = FALSE) +
ca_scale_colour_discrete()
ggmap(basemap) +
geom_sf(data = shapes,
aes(geometry = geometry, colour = name, fill = name),
size = 1, alpha = 0.2,
inherit.aes = FALSE) +
ca_scale_colour_discrete()
ggmap(basemap) +
geom_sf(data = shapes,
aes(geometry = geometry, colour = name, fill = name),
size = 1, alpha = 0.2,
inherit.aes = FALSE) +
ca_scale_colour_discrete() +
ca_scale_fill_discrete()
ggmap(basemap) +
geom_sf(data = shapes,
aes(geometry = geometry, colour = name, fill = name),
size = 1, alpha = 0.2,
inherit.aes = FALSE) +
ca_scale_colour_discrete() +
ca_scale_fill_discrete()
ggmap(basemap) +
geom_sf(data = shapes,
aes(geometry = geometry, colour = name, fill = name),
size = 1, alpha = 0.2,
inherit.aes = FALSE) +
ca_scale_colour_discrete(name = "Geography") +
ca_scale_fill_discrete(name = "Geography") +
scale_x_continuous(name = NULL, breaks = NULL)
ggmap(basemap) +
geom_sf(data = shapes,
aes(geometry = geometry, colour = name, fill = name),
size = 1, alpha = 0.2,
inherit.aes = FALSE) +
ca_scale_colour_discrete(name = "Geography") +
ca_scale_fill_discrete(name = "Geography") +
scale_x_continuous(name = NULL, breaks = NULL, labels = NULL) +
scale_y_continuous(name = NULL, breaks = NULL, labels = NULL)
ggmap(basemap) +
geom_sf(data = shapes,
aes(geometry = geometry, colour = name, fill = name),
size = 1, alpha = 0.2,
inherit.aes = FALSE) +
ca_scale_colour_discrete(name = "Geography") +
ca_scale_fill_discrete(name = "Geography") +
scale_x_continuous(name = NULL, labels = NULL) +
scale_y_continuous(name = NULL, labels = NULL)
ggmap(basemap) +
geom_sf(data = shapes,
aes(geometry = geometry, colour = name, fill = name),
size = 1, alpha = 0.2,
inherit.aes = FALSE) +
ca_scale_colour_discrete(name = "Geography") +
ca_scale_fill_discrete(name = "Geography") +
scale_x_continuous(name = NULL) +
scale_y_continuous(name = NULL) +
ggtitle("Geographies analysed")
library(here)
ggmap(basemap) +
geom_sf(data = shapes,
aes(geometry = geometry, colour = name, fill = name),
size = 1, alpha = 0.2,
inherit.aes = FALSE) +
ca_scale_colour_discrete(name = "Geography") +
ca_scale_fill_discrete(name = "Geography") +
scale_x_continuous(name = NULL) +
scale_y_continuous(name = NULL) +
theme(legend.position = "bottom") +
ggtitle("Geographies analysed")
ggmap(basemap) +
geom_sf(data = shapes,
aes(geometry = geometry, colour = name, fill = name),
size = 1, alpha = 0.2,
inherit.aes = FALSE) +
ca_scale_colour_discrete(name = "Geography") +
ca_scale_fill_discrete(name = "Geography") +
scale_x_continuous(name = NULL) +
scale_y_continuous(name = NULL) +
theme(
legend.position = "bottom",
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) +
ggtitle("Geographies analysed")
ggmap(basemap) +
geom_sf(data = shapes,
aes(geometry = geometry, colour = name, fill = name),
size = 1, alpha = 0.2,
inherit.aes = FALSE) +
ca_scale_colour_discrete(name = "Geography") +
ca_scale_fill_discrete(name = "Geography") +
theme(
legend.position = "bottom",
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) +
ggtitle("Geographies analysed")
ggmap(basemap) +
geom_sf(data = shapes,
aes(geometry = geometry, colour = name, fill = name),
size = 1, alpha = 0.2,
inherit.aes = FALSE) +
ca_scale_colour_discrete(name = "Geography") +
ca_scale_fill_discrete(name = "Geography") +
xlab(NULL) + ylab(NULL) +
theme(
legend.position = "bottom",
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) +
ggtitle("Geographies analysed")
?ggmap
?get_map
basemap <- get_map(
st_bbox(shapes) |>
set_names(c("left", "bottom", "right", "top")), source = "osm")
help("Defunct")
?get_map
basemap <- get_map(
st_bbox(shapes) |>
set_names(c("left", "bottom", "right", "top")),
type = "satellite",
zoom = 14)
ggmap(basemap) +
geom_sf(data = shapes,
aes(geometry = geometry, colour = name, fill = name),
size = 1, alpha = 0.2,
inherit.aes = FALSE) +
ca_scale_colour_discrete(name = "Geography") +
ca_scale_fill_discrete(name = "Geography") +
xlab(NULL) + ylab(NULL) +
theme(
legend.position = "bottom",
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) +
ggtitle("Geographies analysed")
basemap <- get_map(
st_bbox(shapes) |>
set_names(c("left", "bottom", "right", "top")),
maptype = "satellite",
zoom = 14)
ggmap(basemap) +
geom_sf(data = shapes,
aes(geometry = geometry, colour = name, fill = name),
size = 1, alpha = 0.2,
inherit.aes = FALSE) +
ca_scale_colour_discrete(name = "Geography") +
ca_scale_fill_discrete(name = "Geography") +
xlab(NULL) + ylab(NULL) +
theme(
legend.position = "bottom",
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) +
ggtitle("Geographies analysed")
?ggtitle
#| include: false
areas_map <-
ggmap(basemap) +
geom_sf(data = shapes,
aes(geometry = geometry, fill = name),
size = 1, alpha = 0.2, colour = "black",
inherit.aes = FALSE) +
ca_scale_fill_discrete(name = "Geography") +
xlab(NULL) + ylab(NULL) +
theme(
legend.position = "bottom",
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) +
ggtitle("Geographies analysed", caption = "(C) Google 2023")
#| include: false
areas_map <-
ggmap(basemap) +
geom_sf(data = shapes,
aes(geometry = geometry, fill = name),
size = 1, alpha = 0.2, colour = "black",
inherit.aes = FALSE) +
ca_scale_fill_discrete(name = "Geography") +
xlab(NULL) + ylab(NULL) +
theme(
legend.position = "bottom",
axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) +
labs(title = "Geographies analysed", caption = "(C) Google 2023")
plots_tables <- readRDS(here("plots-and-tables", params[["file"]]))
plots_tables
plots <- plots_tables[["plots"]]
tables <- plots_tables[["tables"]]
rm(plots_tables)
rm(rel, religion_bar, religion_neat, religion_table, request_union, requested_shapes, shapes, tables)
rm(hayes, grd, basemap, intersecting_oa, stat_names)
rm(capitalise, hhold_table, in_requested, neaten, nice_table, stat_bar)
rm_oa, oa_stats, others, others_ba, others_plot, others_table)
rm(oa,oa_stats, others, others_ba, others_plot, others_table)
rm(others_bar)
rm(list = ls())
1/0.17
1/6
plots[["ethnicity"]]
#| include: false
library(sf)
library(ggplot2)
library(knitr)
library(ggmap)
library(magrittr)
library(carutools)
library(here)
plots_tables <- readRDS(here("plots-and-tables", params[["file"]]))
plots <- plots_tables[["plots"]]
tables <- plots_tables[["tables"]]
rm(plots_tables)
#| fig-width: 7
#| fig-cap: "Figure 3: Ethnicity across geographies"
plots[["ethnicity"]]
#| fig-width: 7
#| fig-cap: "Figure 3: Ethnicity across geographies"
plots[["ethnicity"]]
tables[["ethnicity"]]
library(stringr)
library(dplry)
library(dplyr)
tables[["ethnicity"]] |>
mutate(across(where(is.character), str_remove, "%")) |>
mutate(across(where(is.character), as.numeric)) |>
mutate(across(where(is.numeric), -Nation))
tables[["ethnicity"]] |>
mutate(across(where(is.character), str_remove, "%")) |>
mutate(across(where(is.character), as.numeric))
tables[["ethnicity"]] |>
mutate(across(where(is.character), str_remove, "%")) |>
mutate(across(where(is.character), as.numeric)) |>
mutate(across(where(is.numeric), -Nation))
tables[["ethnicity"]] |>
mutate(across(where(is.character), str_remove, "%")) |>
mutate(across(where(is.character), as.numeric)) |>
mutate(across(where(is.numeric), \(x) x-Nation))
tables[["ethnicity"]] |>
mutate(across(where(is.character), str_remove, "%")) |>
mutate(across(where(is.character), as.numeric)) |>
mutate(across(where(is.numeric), \(x) x-Nation)) -> comparative_ethn
#| fig-width: 7
#| fig-cap: "Figure 3: Ethnicity across geographies"
plots[["ethnicity"]] |>
labs(caption("DL Church Army's Research Unit"))
#| fig-width: 7
#| fig-cap: "Figure 3: Ethnicity across geographies"
plots[["ethnicity"]] |>
labs(caption ="DL Church Army's Research Unit"))
#| fig-width: 7
#| fig-cap: "Figure 3: Ethnicity across geographies"
plots[["ethnicity"]] |>
labs(caption ="DL Church Army's Research Unit")
#| fig-width: 7
#| fig-cap: "Figure 3: Ethnicity across geographies"
plots[["ethnicity"]] +
labs(caption = "DL Church Army's Research Unit")
#| fig-width: 7
#| fig-cap: "Figure 3: Ethnicity across geographies"
plots[["ethnicity"]] +
labs(caption = "Church Army's Research Unit (DL) 2023")
plots[["age"]] +
labs(caption = "Church Army's Research Unit (DL) 2023")
plots[["religion"]]
#| tbl-cap: "Table 1: Population ages in each geography"
tables[["age"]] |>
kable()
tables[["religion"]]
tables[["religion"]]
q("no")
